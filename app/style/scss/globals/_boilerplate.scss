@use "../util" as u;

.overlay {
  background: white;
  z-index: 5;
  position: fixed;
  top: 0%;
  left: -25%;
  width: 150%;
  height: 100%;
  transform: scaleX(0) skewX(-40deg);
  transform-origin: left;

  &_bigTexte {
    font: u.$sub-font;
    font-size: 100px;
    color: rgba(0, 0, 0, 0);
    display: block;
    margin-left: auto;
    margin-right: auto;
  }
}

@keyframes scaletoright {
  0% {
    transform: scaleX(0) skewX(-40deg);
    transform-origin: left;
  }
  50% {
    transform: scaleX(1) skewX(0deg);
    transform-origin: left;
  }
  51% {
    transform: scaleX(1) skewX(0deg);
    transform-origin: right;
  }
  100% {
    transform: scaleX(0) skewX(40deg);
    transform-origin: right;
  }
}

@keyframes scaletoright2 {
  0% {
    transform: scaleX(0) skewX(-40deg);
    transform-origin: right;
  }
  50% {
    transform: scaleX(1) skewX(0deg);
    transform-origin: right;
  }
  51% {
    transform: scaleX(1) skewX(0deg);
    transform-origin: left;
  }
  100% {
    transform: scaleX(0) skewX(40deg);
    transform-origin: left;
  }
}

@keyframes hide {
  0% {
    position: initial;
    top: initial;
    opacity: 1;
  }
  99% {
    position: initial;
    top: initial;
  }
  100% {
    position: fixed;
    top: -1000vh;
    opacity: 0;
  }
}

@keyframes show {
  0% {
    position: fixed;
    top: -1000vh;
    opacity: 0;
  }
  99% {
    position: fixed;
    top: -1000vh;
  }
  100% {
    position: initial;
    top: initial;
    opacity: 1;
  }
}

.image-stack {
  // To make the content hidden during the transition between pages
  &__item--pola1 {
    grid-row: 1;
    grid-column: 1/4;
    margin-top: 5%; // slightly arbitrary, keeps proportion once resized
    z-index: 1; // tells the browser to make this image on top
    height: fit-content;

    animation: float-slow 4s ease-in-out 0s infinite;
    animation-play-state: paused;

    &:hover {
      animation-play-state: running;
      z-index: 10;
    }
  }

  &__item--gift {
    grid-row: 1;
    grid-column: 1/5;
    margin-top: 38%; // slightly arbitrary, keeps proportion once resized
    height: fit-content;

    animation: float-slow 4s ease-in-out 0s infinite;
    animation-play-state: paused;

    &:hover {
      animation-play-state: running;
      z-index: 10;
    }
  }

  &__item--fleur {
    grid-row: 1;
    grid-column: 3/5;
    margin-top: 10%; // slightly arbitrary, keeps proportion once resized
    z-index: 3; // tells the browser to make this image on top
    height: fit-content;

    pointer-events: none;
    cursor: default;
  }

  &__item--pola2 {
    grid-row: 1;
    grid-column: 4/7;
    margin-top: 30%; // slightly arbitrary, keeps proportion once resized
    z-index: 2; // tells the browser to make this image on top
    height: fit-content;

    animation: float-slow 4s ease-in-out 0s infinite;
    animation-play-state: paused;

    &:hover {
      animation-play-state: running;
      z-index: 10;
    }
  }

  &__item--domaine {
    grid-row: 1;
    grid-column: 6/10;
    margin-top: 85%; // slightly arbitrary, keeps proportion once resized
    height: fit-content;

    @include u.breakpoint-down(medium) {
      grid-row: 2;
      grid-column: 1/5;
    }

    animation: float-slow 4s ease-in-out 0s infinite;
    animation-play-state: paused;

    &:hover {
      animation-play-state: running;
      z-index: 10;
    }
  }

  &__item--invit {
    grid-row: 1;
    grid-column: 6/10;
    margin-top: 15%; // slightly arbitrary, keeps proportion once resized
    z-index: 3; // tells the browser to make this image on top
    height: fit-content;

    @include u.breakpoint-down(medium) {
      grid-row: 2;
      grid-column: 1/5;
    }

    animation: float-slow 4s ease-in-out 0s infinite;
    animation-play-state: paused;

    &:hover {
      animation-play-state: running;
      z-index: 10;
    }
  }

  &__item--leter {
    grid-row: 1;
    grid-column: 7/12;
    height: fit-content;
    visibility: hidden;

    pointer-events: none;
    cursor: default;

    @include u.breakpoint-down(medium) {
      grid-row: 2;
      grid-column: 2/6;
    }
  }

  &__item--prog {
    grid-row: 1;
    grid-column: 10/13;
    margin-top: 15%; // slightly arbitrary, keeps proportion once resized
    height: fit-content;

    @include u.breakpoint-down(medium) {
      grid-row: 2;
      grid-column: 4/7;
    }

    animation: float-slow 4s ease-in-out 0s infinite;
    animation-play-state: paused;

    &:hover {
      animation-play-state: running;
      z-index: 10;
    }
  }
}

.content01-stack {
}

.float-return {
  position: fixed;
  bottom: 40px;
  padding: 15px;
  background-color: #b49276c2;
  color: #fff;
  border-radius: 50px;
  text-align: center;
  box-shadow: 2px 2px 3px #999;

  &__my-float {
    //margin-top: 10px;
  }
}

img {
  width: 100%;
  display: block;
}

page {
  @include u.breakpoint-down(medium) {
    grid-template-columns: repeat(6, 1fr);
  }

  display: grid;
  position: relative; // imperative for the overlapping to work
  grid-template-columns: repeat(12, 1fr);

  height: 100vh;
  width: 95%;
  margin-left: auto;
  margin-right: auto;
}

html {
  box-sizing: border-box;
  font-size: 100%;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
  margin: 0;
  padding: 0;
  font-family: u.$sub-font;
  background-color: var(--background-color);
  color: var(--text-color);
  background-image: var(--background-image);
}
